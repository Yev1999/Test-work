{"id":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","dependencies":[{"name":"/Users/yevheniinaljvka/Desktop/JS/Test-work/package.json","includedInParent":true,"mtime":1674921174495},{"name":"/Users/yevheniinaljvka/Desktop/JS/Test-work/node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/package.json","includedInParent":true,"mtime":1674987752380},{"name":"../toArray/toArray","loc":{"line":4,"column":24,"index":127},"parent":"/Users/yevheniinaljvka/Desktop/JS/Test-work/node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","resolved":"/Users/yevheniinaljvka/Desktop/JS/Test-work/node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/toArray/toArray.ts"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = void 0;\nvar toArray_1 = require(\"../toArray/toArray\");\n/**\n * The extended `Array#forEach` method that accepts a single value as an argument.\n *\n * @param values   - A value or values to iterate over.\n * @param iteratee - An iteratee function.\n */\nfunction forEach(values, iteratee) {\n  (0, toArray_1.toArray)(values).forEach(iteratee);\n}\nexports.forEach = forEach;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":13}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":16}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":23}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":24}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":44}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":45}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":14,"column":9}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":23},"generated":{"line":14,"column":16}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":14,"column":17}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":43},"generated":{"line":14,"column":23}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":45},"generated":{"line":14,"column":25}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":102},"generated":{"line":14,"column":33}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":102},"generated":{"line":14,"column":35}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":2}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":3}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":4}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":6}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":15}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":2},"generated":{"line":15,"column":16}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":15,"column":23}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":11},"generated":{"line":15,"column":25}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":17},"generated":{"line":15,"column":31}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":15,"column":32}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":20},"generated":{"line":15,"column":33}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":27},"generated":{"line":15,"column":40}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":29},"generated":{"line":15,"column":41}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":37},"generated":{"line":15,"column":49}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":11,"column":39},"generated":{"line":15,"column":50}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":7}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":8}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":15}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":18}},{"source":"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":17,"column":25}}],"sources":{"../node_modules/@splidejs/splide-extension-url-hash/node_modules/@splidejs/splide/src/js/utils/array/forEach/forEach.ts":"import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\r\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\r\n  toArray( values ).forEach( iteratee );\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"b953a98b32946aa96a4150a958fd6e6a","cacheData":{"env":{}}}